name: Go CI/CD Pipeline

on:
  push:
    branches:
      - master  # Runs on pushes to master
  pull_request:
    branches:
      - master  # Runs on PRs to master

jobs:
  build-and-test:
    name: Build & Test Go Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20  # Change this if needed

      - name: Verify Go Installation
        run: go version  # Ensures Go is installed correctly

      - name: Initialize Go Modules
        run: go mod init Assignment_1 || true  # Ensures go.mod exists

      - name: Install Dependencies
        run: go mod tidy  # Fixes the issue

      - name: Build Application
        run: go build -v ./cmd/server

      - name: Run Tests
        run: go test -v ./...

      - name: Lint Go Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Verify Go Formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted correctly. Run 'gofmt -w .'"
            exit 1
          fi
