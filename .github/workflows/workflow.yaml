name: Go CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build & Test Go Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20  # Update based on your Go version

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: go mod tidy

      - name: Build Application
        run: go build -v ./cmd/server

      - name: Run Tests
        run: go test -v ./...

      - name: Lint Go Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Verify Go Formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted correctly. Run 'gofmt -w .'"
            exit 1
          fi

  # Optional Deployment Job
  deploy:
    name: Deploy Application (Optional)
    runs-on: ubuntu-latest
    needs: build-and-test  # Run only if build & tests pass

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Server
        run: |
          echo "Deploying the Go application..."
